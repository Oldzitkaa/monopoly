@use "./_color" as c;

$spacing-xs: 5px;
$spacing-sm: 10px;
$spacing-md: 15px;
$spacing-lg: 20px;
$spacing-xl: 30px;
$spacing-xxl: 50px;

$border-radius-sm: 8px;
$border-radius-md: 10px;
$border-radius-lg: 15px;
$border-radius-round: 50%;
$border-radius-logo-div: 40%;

$shadow-sm: 0 2px 5px rgba(0, 0, 0, 0.3);
$shadow-md: 0 4px 8px rgba(0, 0, 0, 0.4);
$shadow-lg: 0 8px 15px rgba(0, 0, 0, 0.5);
$shadow-logo-div: 0 0 50px c.$red1;
$shadow-button: 0px 0px 10px c.$mint;

body {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  margin: 0;
  padding: 1vw;
  box-sizing: border-box;
  overflow: auto;
  background-color: c.$white1;
  font-family: sans-serif;
  font-size: 16px;
}

.monopoly-board {
  display: grid;
  grid-template-columns: minmax(7.5rem, 7.5vw) repeat(10, minmax(5rem, 5vw)) minmax(7.5rem, 7.5vw);
  grid-template-rows: minmax(7.5rem, 7.5vh) repeat(10, minmax(5rem, 5vh)) minmax(7.5rem, 7.5vh);
  gap: 0;
  border: 0.3rem solid black;
  background-color: c.$white1;
  box-sizing: border-box;
  position: relative;

  @media (max-width: 1200px) {
    padding: 0.3rem;
    width: 98vw;
    aspect-ratio: 1 / 1;
    max-height: calc(100vh - 2 * 1vw);
    grid-template-columns: 1.5fr repeat(10, 1fr) 1.5fr;
    grid-template-rows: 1.5fr repeat(10, 1fr) 1.5fr;
    border-width: 0.4rem;
    font-size: clamp(1rem, 5vw, 2rem);
  }
}

.tile {
  border: 0.10rem solid #ccc;
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  background-color: transparent;
  text-align: center;
  overflow: visible;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  word-wrap: break-word;
  hyphens: auto;
  line-height: 1.2;
  position: relative;
  font-size: clamp(0.6rem, 0.8vw + 0.3rem, 0.9rem);
  background-size: cover;
  background-position: center;
  background-image: none;
  background-repeat: no-repeat;
  background-blend-mode: overlay;

  &::before {
    content: "";
    position: absolute;
    inset: 0;
    background-image: var(--tile-bg);
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    opacity: 0.5;
    z-index: 0;
    pointer-events: none;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }

  .tile-id,
  .tile-name,
  .tile-name-text,
  .tile-price,
  .tile-rent,
  .tile-cost,
  .tile-description,
  .tile-tile,
  .tile-color-bar{
    position: relative;
    z-index: 2;
  }

  .tile-name {
    position: relative;
    z-index: 1;
    font-weight: bold;
    font-size: clamp(0.4rem, 0.8vw + 0.3rem, 0.7rem);
    flex-grow: 1;
    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center;
    padding: 2px;
    word-break: break-word;
    hyphens: auto;
  }

  .tile-name-text{
    background-color: rgba(255, 255, 255, 0.7);
    padding: 2px;
  }

  .tile-tile {
    width: 100%;
    height: 0.6rem;
    margin-top: auto;
    border-top: 1px solid #000;
    position: absolute;
    bottom: 0;
    left: 0;
    z-index: 3;
    // Removed specific background-color rules here as they are now handled by .tile-color-bar
  }

  .title-id {
    transform: rotate(-30deg);
    transform-origin: center;
    display: inline-block;
  }

  .tile-color-bar{
    position: absolute; /* Changed from relative to absolute */
    bottom: 0;
    left: 0;
    width: 100%;
    height: 1.2rem; /* Adjusted height for visibility */
    z-index: 2;
    // Background color will be set by inline style from PHP
  }

  // Removed these specific color rules as they are handled by inline style on .tile-color-bar
  // &.azja_restaurant .tile-tile     { background-color: c.$azja; }
  // &.afryka_restaurant .tile-tile   { background-color: c.$afr; }
  // &.australia_restaurant .tile-tile { background-color: c.$aus; }
  // &.amerykan_restaurant .tile-tile { background-color: c.$amen; }
  // &.amerykas_restaurant .tile-tile { background-color: c.$ames; }
  // &.europa_restaurant .tile-tile   { background-color: c.$euro; }
  // &.duel .tile-tile        { background-color: c.$duel; }
  // &.event .tile-tile       { background-color: c.$action; }
  // &.start .tile-tile,
  // &.training .tile-tile,
  // &.vacation .tile-tile    { background-color: c.$start; }

  .tile-price,
  .tile-rent,
  .tile-cost,
  .tile-description {
    display: block;
    font-size: 0.8em;
    font-weight: normal;
    margin-top: 0.2em;
    text-align: center;
    width: 100%;
  }
}

.board-center-placeholder {
  grid-area: 2 / 2 / 12 / 12;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  color: gray;
  font-size: clamp(1.5rem, 5vw, 3rem);
  font-weight: bold;
  pointer-events: none;
  user-select: none;
  z-index: 1;
  text-align: center;

  span {
    display: block;
    font-size: 0.5em;
    font-weight: normal;
    margin-top: 0.2em;
  }
}

//Pionki
.player-marker {
  width: 25px;
  height: 25px;
  background-color: red;
  border: 2px solid black;
  border-radius: 50%;
  position: relative;
  top: 5px;
  left: 5px;
  transition: all 0.4s ease-in-out;
  z-index: 5;
}

  .pawn1 {
    background-color: red;
  }

  .pawn2 {
    background-color: blue;
  }

  .pawn3 {
    background-color: green;
  }

  .pawn4 {
    background-color: yellow;
  }


.players-on-tile {
  position: absolute;
  bottom: 5px;
  width: 100%;
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
}


/* Dice roll button */
.dice-roll-container {
  margin-top: 20px;
}

.dice-roll-button {
  padding: 10px 20px;
  background-color: #4CAF50;
  color: white;
  text-decoration: none;
  border-radius: 5px;
  font-weight: bold;
}

.dice-roll-button:hover {
  background-color: #45a049;
}

// Corrected loop for 40 tiles (0-39) based on standard Monopoly board layout
@for $i from 0 through 39 {
  .tile:nth-child(#{$i + 1}) { // nth-child is 1-indexed

    @if $i == 0 { // Start (bottom-right corner)
        grid-area: 12 / 12;
    } @else if $i >= 1 and $i <= 9 { // Bottom edge (right to left)
        $col: 12 - $i;
        grid-area: 12 / #{$col};
        .tile-name,
        .tile-id {
            transform: rotate(-45deg); // Adjust as needed
            transform-origin: center;
        }
    } @else if $i == 10 { // Jail (bottom-left corner)
        grid-area: 12 / 1;
    } @else if $i >= 11 and $i <= 19 { // Left edge (bottom to top)
        $row: 12 - ($i - 10);
        grid-area: #{$row} / 1;
    } @else if $i == 20 { // Free Parking (top-left corner)
        grid-area: 1 / 1;
    } @else if $i >= 21 and $i <= 29 { // Top edge (left to right)
        $col: 1 + ($i - 20);
        grid-area: 1 / #{$col};
        .tile-name,
        .tile-id {
            transform: rotate(45deg); // Adjust as needed
            transform-origin: center;
        }
    } @else if $i == 30 { // Go To Jail (top-right corner)
        grid-area: 1 / 12;
    } @else if $i >= 31 and $i <= 39 { // Right edge (top to bottom)
        $row: 1 + ($i - 30);
        grid-area: #{$row} / 12;
    }
  }
}